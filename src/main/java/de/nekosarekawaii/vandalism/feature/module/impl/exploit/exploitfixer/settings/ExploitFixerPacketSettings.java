/*
 * This file is part of Vandalism - https://github.com/NekosAreKawaii/Vandalism
 * Copyright (C) 2023-2024 NekosAreKawaii, Verschlxfene, FooFieOwO, Recyz and contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.nekosarekawaii.vandalism.feature.module.impl.exploit.exploitfixer.settings;

import de.nekosarekawaii.vandalism.base.value.ValueParent;
import de.nekosarekawaii.vandalism.base.value.impl.number.FloatValue;
import de.nekosarekawaii.vandalism.base.value.impl.number.IntegerValue;
import de.nekosarekawaii.vandalism.base.value.impl.primitive.BooleanValue;
import de.nekosarekawaii.vandalism.base.value.template.ValueGroup;

public class ExploitFixerPacketSettings extends ValueGroup {

    public ExploitFixerPacketSettings(final ValueParent parent) {
        super(
                parent,
                "Packet Settings",
                "Packet settings for exploit fixer."
        );
    }

    public final BooleanValue blockGuiClose = new BooleanValue(
            this,
            "Block GUI Close",
            "Blocks the server from closing the following GUIs: Game Menu, Chat & Client Window",
            true
    );

    public final BooleanValue componentResolveContainer = new BooleanValue(
            this,
            "Component resolve container",
            "Fixes a vulnerability in the client, that lets the server retrieve resolved translations and key binds which can be used for mod detection, by resolving it in a vanilla container",
            true
    );

    public final BooleanValue blockTooBigExplosions = new BooleanValue(
            this,
            "Block too big explosions",
            "Blocks too big explosions.",
            true
    );

    public final FloatValue maxExplosionPlayerVelocity = new FloatValue(
            this,
            "Max explosion player velocity",
            "Set the max player velocity for explosions.",
            5f,
            0f,
            10000f
    ).visibleCondition(this.blockTooBigExplosions::getValue);

    public final FloatValue maxExplosionRadius = new FloatValue(
            this,
            "Max explosion radius",
            "Set the max radius for explosions.",
            100f,
            100f,
            10000f
    ).visibleCondition(this.blockTooBigExplosions::getValue);

    public final IntegerValue maxExplosionAffectedBlocks = new IntegerValue(
            this,
            "Max explosion affected blocks",
            "Set the max affected blocks for explosions.",
            100,
            100,
            10000
    ).visibleCondition(this.blockTooBigExplosions::getValue);

    public final BooleanValue blockTooManyParticles = new BooleanValue(
            this,
            "Block too many particles",
            "Blocks particles when their count is too high.",
            true
    );

    public final IntegerValue countToBlockParticles = new IntegerValue(
            this,
            "Count to block particles",
            "Set the count to block the particles (per particle type).",
            2000,
            500,
            10000
    ).visibleCondition(this.blockTooManyParticles::getValue);

}
