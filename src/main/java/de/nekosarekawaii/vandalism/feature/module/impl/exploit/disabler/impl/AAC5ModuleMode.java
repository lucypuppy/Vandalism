/*
 * This file is part of Vandalism - https://github.com/NekosAreKawaii/Vandalism
 * Copyright (C) 2023-2024 NekosAreKawaii, Verschlxfene, FooFieOwO, Recyz and contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.nekosarekawaii.vandalism.feature.module.impl.exploit.disabler.impl;

import de.nekosarekawaii.vandalism.Vandalism;
import de.nekosarekawaii.vandalism.event.network.OutgoingPacketListener;
import de.nekosarekawaii.vandalism.event.player.PlayerUpdateListener;
import de.nekosarekawaii.vandalism.feature.module.impl.exploit.disabler.DisablerModule;
import de.nekosarekawaii.vandalism.feature.module.template.module.ModuleMulti;
import io.netty.channel.Channel;
import net.minecraft.network.packet.c2s.play.PlayerMoveC2SPacket;

import java.util.ArrayList;

public class AAC5ModuleMode extends ModuleMulti<DisablerModule> implements OutgoingPacketListener, PlayerUpdateListener {

    private final ArrayList<PlayerMoveC2SPacket> packetQueue = new ArrayList<>();

    public AAC5ModuleMode() {
        super("AAC 5");
    }

    @Override
    public void onActivate() {
        Vandalism.getInstance().getEventSystem().subscribe(this, OutgoingPacketEvent.ID, PlayerUpdateEvent.ID);
    }

    @Override
    public void onDeactivate() {
        Vandalism.getInstance().getEventSystem().unsubscribe(this, OutgoingPacketEvent.ID, PlayerUpdateEvent.ID);
    }

    @Override
    public void onOutgoingPacket(OutgoingPacketEvent event) {
        if (event.packet instanceof PlayerMoveC2SPacket packet) {
            this.packetQueue.add(packet);
            event.setCancelled(true);
        }
    }

    @Override
    public void onPrePlayerUpdate(PlayerUpdateEvent event) {
        if (mc.player == null || mc.player.age % 40 != 0) {
            return;
        }

        float yaw = mc.player.getYaw();
        float pitch = mc.player.getPitch();
        final Channel networkHandler = mc.getNetworkHandler().getConnection().channel;

        for (final PlayerMoveC2SPacket packet : this.packetQueue) {
            networkHandler.writeAndFlush(packet);

            if (packet.changePosition) {
                if (packet.changeLook) {
                    yaw = packet.yaw;
                    pitch = packet.pitch;
                }

                networkHandler.writeAndFlush(new PlayerMoveC2SPacket.Full(packet.x, packet.y - 1.0E159, packet.z, yaw, pitch, true));
                networkHandler.writeAndFlush(new PlayerMoveC2SPacket.Full(packet.x, packet.y, packet.z, yaw, pitch, true));
            }
        }

        this.packetQueue.clear();
    }

}
