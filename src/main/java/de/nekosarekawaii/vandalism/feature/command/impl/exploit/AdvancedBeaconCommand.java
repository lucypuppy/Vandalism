/*
 * This file is part of Vandalism - https://github.com/VandalismDevelopment/Vandalism
 * Copyright (C) 2023-2024 NekosAreKawaii, FooFieOwO and contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.nekosarekawaii.vandalism.feature.command.impl.exploit;

import com.mojang.brigadier.builder.LiteralArgumentBuilder;
import de.nekosarekawaii.vandalism.feature.command.AbstractCommand;
import de.nekosarekawaii.vandalism.util.game.ItemStackUtil;
import net.minecraft.block.Blocks;
import net.minecraft.command.CommandSource;
import net.minecraft.item.ItemStack;
import net.minecraft.nbt.NbtCompound;
import net.minecraft.registry.Registries;

public class AdvancedBeaconCommand extends AbstractCommand {

    public AdvancedBeaconCommand() {
        super(
                "Allows you to get a beacon with a custom effect.",
                Category.EXPLOIT,
                "advancedbeacon"
        );
    }

    @Override
    public void build(LiteralArgumentBuilder<CommandSource> builder) {
        for (var statusEffect : Registries.STATUS_EFFECT) {
            var id = Registries.STATUS_EFFECT.getId(statusEffect);
            if (id != null && id.getNamespace().equals("minecraft")) {
                builder.then(literal(id.getPath()).executes(context -> {
                    var itemStack = new ItemStack(Blocks.BEACON);
                    var tag = new NbtCompound();
                    var blockEntityTag = new NbtCompound();
                    blockEntityTag.putInt("Levels", -1);
                    blockEntityTag.putString("primary_effect", id.toString());
                    blockEntityTag.putString("secondary_effect", id.toString());
                    tag.put("BlockEntityTag", blockEntityTag);
                    // TODO: Fix
                    // itemStack.setNbt(tag);
                    ItemStackUtil.giveItemStack(ItemStackUtil.withClientSide(itemStack));
                    return SINGLE_SUCCESS;
                }));
            }
        }
    }

}
