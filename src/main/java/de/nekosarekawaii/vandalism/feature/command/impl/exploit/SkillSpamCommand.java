/*
 * This file is part of Vandalism - https://github.com/VandalismDevelopment/Vandalism
 * Copyright (C) 2023-2024 NekosAreKawaii, Verschlxfene, FooFieOwO and contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.nekosarekawaii.vandalism.feature.command.impl.exploit;

import com.mojang.brigadier.arguments.IntegerArgumentType;
import com.mojang.brigadier.arguments.StringArgumentType;
import com.mojang.brigadier.builder.LiteralArgumentBuilder;
import de.nekosarekawaii.vandalism.feature.command.AbstractCommand;
import net.minecraft.client.network.ClientPlayNetworkHandler;
import net.minecraft.command.CommandSource;

public class SkillSpamCommand extends AbstractCommand {

    public SkillSpamCommand() {
        super(
                "Allows you to spam the chat using the skill command which bypasses anti spam limitations.",
                Category.EXPLOIT,
                "skillspam"
        );
    }

    @Override
    public void build(final LiteralArgumentBuilder<CommandSource> builder) {
        builder.then(argument("times", IntegerArgumentType.integer(1, 1000)).
                then(argument("message", StringArgumentType.greedyString()).executes(context -> {
                            final int times = IntegerArgumentType.getInteger(context, "times");
                            final String message = StringArgumentType.getString(context, "message");
                            for (int i = 0; i < times; i++) {
                                final ClientPlayNetworkHandler networkHandler = this.mc.getNetworkHandler();
                                if (networkHandler == null) {
                                    break;
                                }
                                networkHandler.sendChatMessage("/skill " + message);
                            }
                            return SINGLE_SUCCESS;
                        })
                )
        );
    }

}
