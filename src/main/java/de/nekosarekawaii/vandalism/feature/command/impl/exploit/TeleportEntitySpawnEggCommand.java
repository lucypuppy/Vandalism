/*
 * This file is part of Vandalism - https://github.com/VandalismDevelopment/Vandalism
 * Copyright (C) 2023-2024 NekosAreKawaii, Verschlxfene, FooFieOwO and contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.nekosarekawaii.vandalism.feature.command.impl.exploit;

import com.mojang.brigadier.builder.LiteralArgumentBuilder;
import de.nekosarekawaii.vandalism.feature.command.AbstractCommand;
import de.nekosarekawaii.vandalism.feature.command.arguments.PlayerArgumentType;
import de.nekosarekawaii.vandalism.util.common.UUIDUtil;
import de.nekosarekawaii.vandalism.util.game.ChatUtil;
import de.nekosarekawaii.vandalism.util.game.ItemStackUtil;
import net.minecraft.client.network.PlayerListEntry;
import net.minecraft.command.CommandSource;
import net.minecraft.command.argument.UuidArgumentType;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.NbtCompound;

import java.util.UUID;
import java.util.concurrent.Executors;

public class TeleportEntitySpawnEggCommand extends AbstractCommand {

    public TeleportEntitySpawnEggCommand() {
        super("Allows you to teleport any entity in your dimension only by it's uuid.", Category.EXPLOIT, "teleportentityspawnegg", "entityteleportspawnegg", "teleportentity");
    }

    @Override
    public void build(final LiteralArgumentBuilder<CommandSource> builder) {
        builder.then(argument("name", PlayerArgumentType.create()).executes(context -> {
            final String player = PlayerArgumentType.get(context);
            if (!player.isEmpty()) {
                Executors.newSingleThreadExecutor().submit(() -> {
                    UUID uuid = null;
                    try {
                        ChatUtil.infoChatMessage("Getting uuid by username from mojang api...");
                        uuid = UUID.fromString(UUIDUtil.getUUIDFromName(player));
                    }
                    catch (Exception ignored) {
                        ChatUtil.infoChatMessage("Failed to get uuid by username from mojang api, trying to get it from the server...");
                        for (final PlayerListEntry entry : this.mc.getNetworkHandler().getPlayerList()) {
                            if (entry.getProfile().getName().equalsIgnoreCase(player)) {
                                uuid = entry.getProfile().getId();
                                break;
                            }
                        }
                    }
                    if (uuid != null) {
                        this.give(uuid);
                    }
                    else {
                        ChatUtil.errorChatMessage("Error while getting uuid for name: " + player);
                    }
                });
            }
            else {
                ChatUtil.errorChatMessage("Please specify a player.");
            }
            return SINGLE_SUCCESS;
        }));
        builder.then(argument("uuid", UuidArgumentType.uuid()).executes(context -> {
            this.give(context.getArgument("uuid", UUID.class));
            return SINGLE_SUCCESS;
        }));
    }

    private void give(final UUID uuid) {
        final ItemStack itemStack = new ItemStack(Items.HORSE_SPAWN_EGG);
        final NbtCompound tag = new NbtCompound(), entityTag = new NbtCompound(), renderItem = new NbtCompound();
        renderItem.putByte("Count", (byte) 1);
        renderItem.putString("id", "minecraft:stone_button");
        entityTag.put("Item", renderItem);
        entityTag.putString("id", "minecraft:ender_pearl");
        entityTag.putUuid("Owner", uuid);
        tag.put("EntityTag", entityTag);
        itemStack.setNbt(tag);
        ItemStackUtil.giveItemStack(itemStack);
    }

}
