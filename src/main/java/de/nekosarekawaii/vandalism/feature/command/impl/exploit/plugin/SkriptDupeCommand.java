/*
 * This file is part of Vandalism - https://github.com/NekosAreKawaii/Vandalism
 * Copyright (C) 2023-2024 NekosAreKawaii, FooFieOwO, Recyz and contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.nekosarekawaii.vandalism.feature.command.impl.exploit.plugin;

import com.mojang.brigadier.arguments.LongArgumentType;
import com.mojang.brigadier.arguments.StringArgumentType;
import com.mojang.brigadier.builder.LiteralArgumentBuilder;
import de.nekosarekawaii.vandalism.feature.command.AbstractCommand;
import de.nekosarekawaii.vandalism.util.ChatUtil;
import net.minecraft.command.CommandSource;

import java.util.concurrent.Executors;

public class SkriptDupeCommand extends AbstractCommand {

    public SkriptDupeCommand() {
        super(
                "Allows you to dupe on servers that are using the plugin Skript for guis.",
                Category.EXPLOIT,
                "skriptdupe",
                "skdupe",
                "dupesk",
                "dupeskript",
                "skriptguidupe"
        );
    }

    @Override
    public void build(final LiteralArgumentBuilder<CommandSource> builder) {
        builder.then(argument("delay", LongArgumentType.longArg(10, 15000))
                .then(argument("skript-gui-command", StringArgumentType.word())
                        .executes(context -> {
                            Executors.newSingleThreadExecutor().submit(() -> {
                                if (this.mc.getNetworkHandler() != null) {
                                    try {
                                        final long delay = LongArgumentType.getLong(context, "delay");
                                        final String skriptGuiCommand = StringArgumentType.getString(context, "skript-gui-command");
                                        this.mc.getNetworkHandler().sendChatCommand(skriptGuiCommand);
                                        Thread.sleep(delay);
                                        this.mc.getNetworkHandler().sendChatCommand(skriptGuiCommand);
                                    } catch (Throwable throwable) {
                                        ChatUtil.errorChatMessage("Failed to dupe with skript due to: " + throwable);
                                    }
                                }
                            });
                            return SINGLE_SUCCESS;
                        })
                )
        );
    }

}
