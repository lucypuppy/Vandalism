/*
 * This file is part of Vandalism - https://github.com/NekosAreKawaii/Vandalism
 * Copyright (C) 2023-2024 NekosAreKawaii, FooFieOwO, Recyz and contributors
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.nekosarekawaii.vandalism.feature.command.impl.exploit;

import com.mojang.brigadier.builder.LiteralArgumentBuilder;
import de.nekosarekawaii.vandalism.feature.command.AbstractCommand;
import de.nekosarekawaii.vandalism.util.game.ItemStackUtil;
import net.minecraft.command.CommandSource;
import net.minecraft.command.argument.RegistryEntryReferenceArgumentType;
import net.minecraft.component.DataComponentTypes;
import net.minecraft.component.type.NbtComponent;
import net.minecraft.enchantment.Enchantment;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.NbtCompound;
import net.minecraft.registry.RegistryKey;
import net.minecraft.registry.RegistryKeys;
import net.minecraft.registry.entry.RegistryEntry;

public class CreateEntitySpawnEggCommand extends AbstractCommand {

    public CreateEntitySpawnEggCommand() {
        super(
                "Allows you to spawn any entity with a spawn egg.",
                Category.EXPLOIT,
                "createentityspawnegg",
                "createentity",
                "spawnentity"
        );
    }

    @Override
    public void build(final LiteralArgumentBuilder<CommandSource> builder) {
        builder.then(argument("entity", RegistryEntryReferenceArgumentType.registryEntry(REGISTRY_ACCESS, RegistryKeys.ENTITY_TYPE)).executes(context -> {
            final ItemStack itemStack = new ItemStack(Items.PIG_SPAWN_EGG);
            final NbtCompound entityData = new NbtCompound();
            final RegistryEntry.Reference<Enchantment> reference = context.getArgument("entity", RegistryEntry.Reference.class);
            final RegistryKey<Enchantment> registryKey = reference.registryKey();
            entityData.putString("id", registryKey.getValue().toString());
            itemStack.set(DataComponentTypes.ENTITY_DATA, NbtComponent.of(entityData));
            ItemStackUtil.giveItemStack(itemStack);
            return SINGLE_SUCCESS;
        }));
    }

}
