package de.foxglovedevelopment.foxglove.feature.impl.command.impl.exploit;

import com.mojang.brigadier.builder.LiteralArgumentBuilder;
import de.foxglovedevelopment.foxglove.feature.FeatureCategory;
import de.foxglovedevelopment.foxglove.feature.impl.command.Command;
import de.foxglovedevelopment.foxglove.feature.impl.command.arguments.SoundArgumentType;
import net.minecraft.command.CommandSource;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.NbtCompound;
import net.minecraft.network.packet.c2s.play.CreativeInventoryActionC2SPacket;
import net.minecraft.sound.SoundEvent;

public class SoundHeadCommand extends Command {

    public SoundHeadCommand() {
        super(
                "Sound Head",
                "Gives you a player head which allows you to play any minecraft sounds when placed on top of a note block.",
                FeatureCategory.EXPLOIT,
                false,
                "soundhead",
                "playersoundhead",
                "soundplayerhead"
        );
    }

    @Override
    public void build(final LiteralArgumentBuilder<CommandSource> builder) {
        builder.then(argument("sound", SoundArgumentType.create()).executes(context -> {
            if (player() != null && networkHandler() != null) {
                if (!player().getAbilities().creativeMode) throw notInCreativeMode.create();
                final int emptySlot = player().getInventory().getEmptySlot();
                if (emptySlot == -1 || emptySlot > 8) throw notSpaceInHotBar.create();
                final ItemStack item = new ItemStack(Items.PLAYER_HEAD);
                final NbtCompound nbt = new NbtCompound();
                final NbtCompound blockEntityTag = new NbtCompound();
                blockEntityTag.putString("note_block_sound", context.getArgument("sound", SoundEvent.class).getId().getPath());
                nbt.put("BlockEntityTag", blockEntityTag);
                item.setNbt(nbt);
                networkHandler().sendPacket(new CreativeInventoryActionC2SPacket(36 + emptySlot, item));
            }
            return singleSuccess;
        }));
    }

}
