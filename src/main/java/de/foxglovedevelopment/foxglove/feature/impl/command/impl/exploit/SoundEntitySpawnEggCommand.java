package de.foxglovedevelopment.foxglove.feature.impl.command.impl.exploit;

import com.mojang.brigadier.builder.LiteralArgumentBuilder;
import de.foxglovedevelopment.foxglove.feature.FeatureCategory;
import de.foxglovedevelopment.foxglove.feature.impl.command.Command;
import de.foxglovedevelopment.foxglove.feature.impl.command.arguments.SoundArgumentType;
import net.minecraft.command.CommandSource;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.NbtCompound;
import net.minecraft.network.packet.c2s.play.CreativeInventoryActionC2SPacket;
import net.minecraft.sound.SoundEvent;

public class SoundEntitySpawnEggCommand extends Command {

    private final static String[] PERSISTENT_PROJECTILE_ENTITIES = {
            "arrow",
            "trident",
            "spectral_arrow"
    };

    public SoundEntitySpawnEggCommand() {
        super(
                "Sound Entity Spawn Egg",
                "Allows you to spawn a projectile which allows you to play a sound.",
                FeatureCategory.EXPLOIT,
                false,
                "soundentityspawnegg",
                "soundentity",
                "spawnsoundentity"
        );
    }

    @Override
    public void build(final LiteralArgumentBuilder<CommandSource> builder) {
        for (final String persistentProjectileEntity : PERSISTENT_PROJECTILE_ENTITIES) {
            builder.then(argument("sound", SoundArgumentType.create()).then(literal(persistentProjectileEntity).executes(context -> {
                if (player() != null && networkHandler() != null) {
                    if (!player().getAbilities().creativeMode) throw notInCreativeMode.create();
                    final int emptySlot = player().getInventory().getEmptySlot();
                    if (emptySlot == -1 || emptySlot > 8) throw notSpaceInHotBar.create();
                    final ItemStack item = new ItemStack(Items.PIG_SPAWN_EGG);
                    final NbtCompound nbt = new NbtCompound();
                    final NbtCompound entityTag = new NbtCompound();
                    entityTag.putString("SoundEvent", context.getArgument("sound", SoundEvent.class).getId().getPath());
                    entityTag.putString("id", "minecraft:" + persistentProjectileEntity);
                    nbt.put("EntityTag", entityTag);
                    item.setNbt(nbt);
                    networkHandler().sendPacket(new CreativeInventoryActionC2SPacket(36 + emptySlot, item));
                }
                return singleSuccess;
            })));
        }
    }

}
