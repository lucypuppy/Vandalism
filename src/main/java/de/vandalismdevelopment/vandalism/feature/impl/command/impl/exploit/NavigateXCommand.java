package de.vandalismdevelopment.vandalism.feature.impl.command.impl.exploit;

import com.mojang.brigadier.builder.LiteralArgumentBuilder;
import de.vandalismdevelopment.vandalism.feature.FeatureCategory;
import de.vandalismdevelopment.vandalism.feature.impl.command.Command;
import de.vandalismdevelopment.vandalism.util.ChatUtils;
import net.minecraft.command.CommandSource;
import net.minecraft.command.argument.UuidArgumentType;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.NbtCompound;
import net.minecraft.network.packet.c2s.play.CreativeInventoryActionC2SPacket;

import java.util.UUID;

public class NavigateXCommand extends Command {

    public NavigateXCommand() {
        super(
                "Navigate X",
                "Allows you to find players in creative mode but only if custom spawn eggs are working on the server.",
                FeatureCategory.EXPLOIT,
                false,
                "navigatex",
                "findplayer"
        );
    }

    @Override
    public void build(final LiteralArgumentBuilder<CommandSource> builder) {
        builder.then(argument("uuid", UuidArgumentType.uuid()).executes(context -> {
            final UUID uuid = context.getArgument("uuid", UUID.class);
            try {
                if (player() != null && networkHandler() != null) {
                    if (!player().getAbilities().creativeMode) throw NOT_IN_CREATIVE_MODE.create();
                    final int emptySlot = player().getInventory().getEmptySlot();
                    if (emptySlot == -1 || emptySlot > 8) throw NOT_SPACE_IN_HOT_BAR.create();
                    final ItemStack item = new ItemStack(Items.SHULKER_SPAWN_EGG);
                    final NbtCompound nbt = new NbtCompound(), entityTag = new NbtCompound();
                    entityTag.putUuid("Target", uuid);
                    entityTag.putInt("Steps", 1);
                    entityTag.putString("id", "minecraft:shulker_bullet");
                    nbt.put("EntityTag", entityTag);
                    item.setNbt(nbt);
                    networkHandler().sendPacket(new CreativeInventoryActionC2SPacket(36 + emptySlot, item));
                }
            } catch (final Throwable throwable) {
                ChatUtils.errorChatMessage("Failed to give item cause of: " + throwable);
            }
            return SINGLE_SUCCESS;
        }));
    }

}
