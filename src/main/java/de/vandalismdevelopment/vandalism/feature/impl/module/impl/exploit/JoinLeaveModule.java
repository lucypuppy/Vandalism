package de.vandalismdevelopment.vandalism.feature.impl.module.impl.exploit;

import de.florianmichael.dietrichevents2.DietrichEvents2;
import de.vandalismdevelopment.vandalism.event.PacketListener;
import de.vandalismdevelopment.vandalism.feature.FeatureCategory;
import de.vandalismdevelopment.vandalism.feature.impl.module.Module;
import de.vandalismdevelopment.vandalism.util.ChatUtil;
import net.minecraft.client.network.PlayerListEntry;
import net.minecraft.network.packet.Packet;
import net.minecraft.network.packet.s2c.play.PlayerListS2CPacket;
import net.minecraft.network.packet.s2c.play.PlayerRemoveS2CPacket;
import net.minecraft.util.Formatting;

import java.util.UUID;

public class JoinLeaveModule extends Module implements PacketListener {

    public JoinLeaveModule() {
        super(
                "Join Leave",
                "Notifies you whenever a player disconnects or connects to the server you are currently connected to.",
                FeatureCategory.EXPLOIT,
                false,
                false
        );
    }

    @Override
    protected void onEnable() {
        DietrichEvents2.global().subscribe(PacketEvent.ID, this);
    }

    @Override
    protected void onDisable() {
        DietrichEvents2.global().unsubscribe(PacketEvent.ID, this);
    }

    @Override
    public void onPacket(final PacketEvent event) {
        final Packet<?> packet = event.packet;
        if (packet instanceof final PlayerListS2CPacket playerListS2CPacket) {
            if (playerListS2CPacket.getActions().contains(PlayerListS2CPacket.Action.ADD_PLAYER)) {
                for (final PlayerListS2CPacket.Entry entry : playerListS2CPacket.getEntries()) {
                    ChatUtil.infoChatMessage(Formatting.DARK_GRAY + "[" + Formatting.DARK_GREEN + "+" + Formatting.DARK_GRAY + "] " + Formatting.GREEN + entry.profile().getName());
                }
            }
        } else if (packet instanceof final PlayerRemoveS2CPacket playerRemoveS2CPacket) {
            if (networkHandler() != null) {
                for (final UUID profileId : playerRemoveS2CPacket.profileIds()) {
                    final PlayerListEntry playerListEntry = networkHandler().getPlayerListEntry(profileId);
                    if (playerListEntry != null) {
                        ChatUtil.infoChatMessage(Formatting.DARK_GRAY + "[" + Formatting.DARK_RED + "-" + Formatting.DARK_GRAY + "] " + Formatting.RED + playerListEntry.getProfile().getName());
                    }
                }
            }
        }
    }

}
