package me.nekosarekawaii.foxglove.feature.impl.module.impl.exploit;

import de.florianmichael.dietrichevents2.DietrichEvents2;
import me.nekosarekawaii.foxglove.event.PacketListener;
import me.nekosarekawaii.foxglove.feature.FeatureCategory;
import me.nekosarekawaii.foxglove.feature.impl.module.Module;
import me.nekosarekawaii.foxglove.feature.impl.module.ModuleInfo;
import me.nekosarekawaii.foxglove.util.minecraft.ChatUtils;
import net.minecraft.client.network.ClientPlayNetworkHandler;
import net.minecraft.client.network.PlayerListEntry;
import net.minecraft.network.packet.Packet;
import net.minecraft.network.packet.s2c.play.PlayerListS2CPacket;
import net.minecraft.network.packet.s2c.play.PlayerRemoveS2CPacket;
import net.minecraft.util.Formatting;

import java.util.UUID;

@ModuleInfo(name = "Join Leave", description = "See when ever a player joins or leaves the current server you are on.", category = FeatureCategory.EXPLOIT)
public class JoinLeaveModule extends Module implements PacketListener {

    @Override
    protected void onEnable() {
        DietrichEvents2.global().subscribe(PacketEvent.ID, this);
    }

    @Override
    protected void onDisable() {
        DietrichEvents2.global().unsubscribe(PacketEvent.ID, this);
    }

    @Override
    public void onRead(final PacketEvent event) {
        if (event.isCancelled()) return;
        final Packet<?> packet = event.packet;
        if (packet instanceof final PlayerListS2CPacket playerListS2CPacket) {
            if (playerListS2CPacket.getActions().contains(PlayerListS2CPacket.Action.ADD_PLAYER)) {
                for (final PlayerListS2CPacket.Entry entry : playerListS2CPacket.getEntries()) {
                    ChatUtils.infoChatMessage(Formatting.DARK_GRAY + "[" + Formatting.DARK_GREEN + "+" + Formatting.DARK_GRAY + "] " + Formatting.GREEN + entry.profile().getName());
                }
            }
        } else if (packet instanceof final PlayerRemoveS2CPacket playerRemoveS2CPacket) {
            final ClientPlayNetworkHandler networkHandler = mc.getNetworkHandler();
            if (networkHandler != null) {
                for (final UUID profileId : playerRemoveS2CPacket.profileIds()) {
                    final PlayerListEntry playerListEntry = networkHandler.getPlayerListEntry(profileId);
                    if (playerListEntry != null) {
                        ChatUtils.infoChatMessage(Formatting.DARK_GRAY + "[" + Formatting.DARK_RED + "-" + Formatting.DARK_GRAY + "] " + Formatting.RED + playerListEntry.getProfile().getName());
                    }
                }
            }
        }
    }

}
