package me.nekosarekawaii.foxglove.feature.impl.command.impl.exploit;

import com.mojang.brigadier.builder.LiteralArgumentBuilder;
import me.nekosarekawaii.foxglove.feature.FeatureCategory;
import me.nekosarekawaii.foxglove.feature.impl.command.Command;
import me.nekosarekawaii.foxglove.feature.impl.command.CommandInfo;
import me.nekosarekawaii.foxglove.feature.impl.command.arguments.SoundArgumentType;
import me.nekosarekawaii.foxglove.util.minecraft.inventory.FindItemResult;
import me.nekosarekawaii.foxglove.util.minecraft.inventory.InvUtils;
import net.minecraft.client.network.ClientPlayNetworkHandler;
import net.minecraft.client.network.ClientPlayerEntity;
import net.minecraft.command.CommandSource;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.NbtCompound;
import net.minecraft.network.packet.c2s.play.CreativeInventoryActionC2SPacket;
import net.minecraft.sound.SoundEvent;

@CommandInfo(name = "Sound Entity Spawn Egg", description = "Gives you an spawn egg which allows you to play sounds.", aliases = {"soundentityspawnegg", "sentityspawnegg", "sspawnegg"}, category = FeatureCategory.EXPLOIT)
public class SoundEntitySpawnEggCommand extends Command {

    @Override
    public void build(final LiteralArgumentBuilder<CommandSource> builder) {
        builder.then(argument("sound", SoundArgumentType.create()).executes(context -> {
            final ClientPlayerEntity player = mc.player;
            final ClientPlayNetworkHandler handler = mc.getNetworkHandler();
            if (player != null && handler != null) {
                if (!player.getAbilities().creativeMode) throw notInCreativeMode.create();
                final FindItemResult fir = InvUtils.find(ItemStack::isEmpty, 0, 8);
                if (!fir.found()) throw notSpaceInHotBar.create();
                final ItemStack item = new ItemStack(Items.ALLAY_SPAWN_EGG);
                final NbtCompound nbt = new NbtCompound();
                final NbtCompound entityTag = new NbtCompound();
                entityTag.putString("SoundEvent", context.getArgument("sound", SoundEvent.class).getId().getPath());
                entityTag.putString("id", "minecraft:arrow");
                nbt.put("EntityTag", entityTag);
                item.setNbt(nbt);
                handler.sendPacket(new CreativeInventoryActionC2SPacket(36 + fir.slot(), item));
            }
            return singleSuccess;
        }));
    }

}
