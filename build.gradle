plugins {
	id "fabric-loom" version "1.3-SNAPSHOT"
	id "io.github.juuxel.loom-vineflower" version "1.11.0"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven {
		name = "Jitpack"
		url = "https://jitpack.io/"
	}

	maven {
		name = "Lenni0451 releases"
		url = "https://maven.lenni0451.net/releases"
	}

	maven {
		name = "Lenni0451 snapshots"
		url = "https://maven.lenni0451.net/snapshots"
	}

	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/releases"
	}

	maven {
		name = "OpenCollab Snapshots"
		url = "https://repo.opencollab.dev/maven-snapshots/"
	}

	maven {
		name = "ViaVersion"
		url = "https://repo.viaversion.com"
	}

	maven {
		name = "Litarvan"
		url = "https://litarvan.github.io/maven"
	}
}

loom {
	accessWidenerPath = file("src/main/resources/" + archives_base_name + ".accesswidener")
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Mods
	modImplementation "de.florianmichael:viafabricplus:${project.viafabricplus_version}"
	modImplementation "com.github.CaffeineMC:sodium-fabric:${project.sodium_version}"

	// Libs
	implementation "net.lenni0451:MCPing:${project.mc_ping_version}"
	implementation "net.lenni0451:ImNbt:${project.imnbt_version}"

	implementation "fr.litarvan:openauth:${project.openauth_version}"

	implementation "io.github.spair:imgui-java-binding:${project.spair_imgui_version}"
	implementation "io.github.spair:imgui-java-lwjgl3:${project.spair_imgui_version}"
	implementation "io.github.spair:imgui-java-natives-windows:${project.spair_imgui_version}"
	implementation "io.github.spair:imgui-java-natives-linux:${project.spair_imgui_version}"

	implementation "de.florianmichael:DietrichEvents2:${project.dietrichevents2_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}
