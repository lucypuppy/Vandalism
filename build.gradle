plugins {
	id "fabric-loom" version "1.4-SNAPSHOT"
}

allprojects {
	apply plugin: "java-library"
	apply plugin: "fabric-loom"

	base {
		version = project.maven_version
		group = project.maven_group
	}

	repositories {
		mavenCentral()

		maven {
			name = "Jitpack"
			url = "https://jitpack.io/"
		}

		maven {
			name = "Lenni0451"
			url = "https://maven.lenni0451.net/everything/"
		}

		maven {
			name = "TerraformersMC"
			url = "https://maven.terraformersmc.com/releases/"
		}

		maven {
			name = "OpenCollab Snapshots"
			url = "https://repo.opencollab.dev/maven-snapshots/"
		}

		maven {
			name = "ViaVersion"
			url = "https://repo.viaversion.com/"
		}

		maven {
			name = "Modrinth"
			url = "https://api.modrinth.com/maven/"
		}
	}

	dependencies {
		minecraft("com.mojang:minecraft:${project.minecraft_version}")

		mappings("net.fabricmc:yarn:${project.yarn_mappings_version}:v2")
		modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
		modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

		implementation("io.github.spair:imgui-java-binding:${project.spair_imgui_version}")
		implementation("io.github.spair:imgui-java-lwjgl3:${project.spair_imgui_version}")
		for (os in ["macos", "windows", "linux"]) {
			implementation("io.github.spair:imgui-java-natives-$os:${project.spair_imgui_version}")
		}

		modImplementation("de.florianmichael:viafabricplus:${project.viafabricplus_version}")

		implementation("net.lenni0451:Reflect:${project.reflect_version}")

		for (module in ["common", "functional", "io", "math", "pattern"]) {
			implementation("de.florianmichael.rclasses:$module:${project.rclasses_version}")
		}
	}

	processResources {
		inputs.property "version", project.version
		filesMatching("fabric.mod.json") {
			expand "version": project.version
		}
	}


	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}

		sourceCompatibility = JavaVersion.VERSION_17
		targetCompatibility = JavaVersion.VERSION_17
	}

	jar {
		// Rename the project's license file to LICENSE_<project_name> to avoid conflicts
		from("LICENSE") {
			rename {
				"${it}_${maven_name}"
			}
		}
	}

	idea {
		module {
			["run"].each {
				excludeDirs << file("$projectDir/$it")
			}
		}
	}

}

subprojects {

	dependencies {
		implementation project(":")
	}
}

base {
	archivesName = project.maven_name
}

loom {
	accessWidenerPath = file("src/main/resources/" + maven_name + ".accesswidener")
}

dependencies {
	implementation("de.florianmichael:DietrichEvents2:${project.dietrichevents2_version}")
	implementation("de.florianmichael:WaybackAuthLib:${project.waybackauthlib_version}")

	implementation("net.lenni0451:ImNbt:${project.imnbt_version}")
	implementation("net.lenni0451:MCPing:${project.mc_ping_version}")

	implementation("com.github.kwhat:jnativehook:${project.jnativehook_version}")
	implementation("org.jsoup:jsoup:${project.jsoup_version}")
}
